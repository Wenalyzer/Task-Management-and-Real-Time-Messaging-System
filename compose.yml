# 任務管理與即時留言系統 - Docker Compose 配置
# 使用現代 Docker Compose 語法（不需要 version 字段）

services:
  # MySQL 8.4.6 資料庫服務
  mysql:
    image: mysql:8.4.6
    container_name: task-mysql
    restart: unless-stopped
    env_file:
      - .env
    environment:
      - TZ=${TZ}
    ports:
      - "${MYSQL_PORT}:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    command: --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci --default-time-zone='${MYSQL_TIMEZONE}'
    networks:
      - task-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "$MYSQL_USER", "-p$MYSQL_PASSWORD"]
      timeout: 20s
      retries: 10
      interval: 10s
      start_period: 40s

  # FastAPI 後端服務
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: task-backend
    restart: unless-stopped
    env_file:
      - .env
    environment:
      - TZ=${TZ}
    ports:
      - "${BACKEND_PORT}:8000"
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - task-network
    healthcheck:
      test: ["CMD", "python", "-c", "import urllib.request; urllib.request.urlopen('http://localhost:8000/health')"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s

  # Next.js 15.5.2 前端服務
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: task-frontend
    restart: unless-stopped
    env_file:
      - .env
    environment:
      - TZ=${TZ}
    ports:
      - "${FRONTEND_PORT}:3000"
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - task-network

volumes:
  mysql_data:
    driver: local

networks:
  task-network:
    driver: bridge