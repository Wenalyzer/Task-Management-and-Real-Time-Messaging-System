# 任務管理與即時留言系統 - Docker Compose 配置
# 使用現代 Docker Compose 語法（不需要 version 字段）

services:
  # MySQL 8.4.6 資料庫服務
  mysql:
    image: mysql:8.4.6
    container_name: task-mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-rootpassword123}
      MYSQL_DATABASE: ${MYSQL_DATABASE:-task_management}
      MYSQL_USER: ${MYSQL_USER:-taskuser}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-taskpass123}
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./mysql/init:/docker-entrypoint-initdb.d:ro
    command: --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    networks:
      - task-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p$MYSQL_ROOT_PASSWORD"]
      timeout: 20s
      retries: 10
      interval: 10s
      start_period: 30s

  # FastAPI 後端服務
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: task-backend
    restart: unless-stopped
    environment:
      DATABASE_URL: mysql+pymysql://${MYSQL_USER:-taskuser}:${MYSQL_PASSWORD:-taskpass123}@mysql:3306/${MYSQL_DATABASE:-task_management}
      SECRET_KEY: ${SECRET_KEY:-your-secret-key-here-change-in-production}
      ACCESS_TOKEN_EXPIRE_MINUTES: ${ACCESS_TOKEN_EXPIRE_MINUTES:-43200}
      BACKEND_CORS_ORIGINS: '["http://localhost:3000","http://127.0.0.1:3000","http://frontend:3000"]'
      ENVIRONMENT: production
    ports:
      - "8000:8000"
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - task-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Next.js 15.5.2 前端服務
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: task-frontend
    restart: unless-stopped
    environment:
      NEXT_PUBLIC_API_URL: ${NEXT_PUBLIC_API_URL:-http://localhost:8000}
    ports:
      - "3000:3000"
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - task-network

volumes:
  mysql_data:
    driver: local

networks:
  task-network:
    driver: bridge